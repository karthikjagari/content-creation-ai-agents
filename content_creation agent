{
  "name": "contetnt aiagents",
  "nodes": [
    {
      "parameters": {

      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [160, 1960],
      "id": "2ce9925d-c700-4060-8457-50bd9df2db68",
      "name": "Limit"
    },
    {
      "parameters": {
        "options": {

        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [-220, 2340],
      "id": "d83a92a6-f192-494c-a646-3e58224dfc89",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.together.xyz/v1/images/generations",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "black-forest-labs/FLUX.1-schnell-Free"
            },
            {
              "name": "prompt",
              "value": "={{ $json.image_prompt }}"
            },
            {
              "name": "width",
              "value": "={{ 720 }}"
            },
            {
              "name": "height",
              "value": "={{ 1280 }}"
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [100, 2340],
      "id": "eeaf7eb7-72df-44e3-bcc1-b6847806fc8a",
      "name": "Generate AI image",
      "alwaysOutputData": false,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Configure me').item.json.ai_agents_no_code_tools_url }}/api/v1/media/storage",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "url",
              "value": "={{ $json.data[0].url }}"
            },
            {
              "name": "media_type",
              "value": "image"
            }
          ]
        },
        "options": {
          "timeout": 10000
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [340, 2280],
      "id": "1ce1c163-7b6d-4fe7-b737-72eed3496d1c",
      "name": "Upload image to server",
      "retryOnFail": true
    },
    {
      "parameters": {
        "url": "={{ $('Configure me').item.json.ai_agents_no_code_tools_url }}/api/v1/media/storage/{{ $('Start generating TTS (chatterbox)').item.json.file_id }}/status",
        "options": {

        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1240, 2460],
      "id": "039b8e0b-7fe1-412b-ad70-6ca1141e4e4e",
      "name": "Get status of TTS generation",
      "retryOnFail": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "ready",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "91402596-3978-4dfc-91b7-9ffe3521b862"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ready"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0c29765e-4213-434c-9bf3-c5e854dd6ee8",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "processing",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "processing"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4a6cfd86-e690-417e-aa6d-ae497e1177ae",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "not_found",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "failed"
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [1400, 2460],
      "id": "97b6ddf9-0786-4484-b653-753c0faec98a",
      "name": "TTS status switch"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Configure me').item.json.ai_agents_no_code_tools_url }}/api/v1/media/video-tools/generate/tts-captioned-video",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "specifyBody": "string",
        "body": "={{ \n\n[\n  `background_id=${$('Upload image to server').item.json.file_id}`,\n  $json.tts_audio_id ? `audio_id=${$json.tts_audio_id}` : false,\n  $json.tts_audio_id ? '' : `text=${encodeURIComponent($('Loop Over Items').item.json.text)}`,\n  $json.tts_audio_id ? '' :  `kokoro_voice=${$('Configure TTS').item.json.kokoro_voice}`,\n  $json.tts_audio_id ? '' : `kokoro_speed=${$('Configure TTS').item.json.kokoro_speed}`\n].filter(Boolean).join('&') \n\n}}",
        "options": {
          "redirect": {
            "redirect": {

            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [2100, 2260],
      "id": "e52211d6-eb5d-4314-9420-a8e3b0397e03",
      "name": "Start generating captioned TTS video"
    },
    {
      "parameters": {
        "url": "={{ $('Configure me').item.json.no_code_tools_url }}/api/v1/media/storage/{{ $('Start generating captioned TTS video').item.json.file_id }}/status",
        "options": {

        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [2500, 2260],
      "id": "aa81bc38-7372-47aa-bb7f-d7fd56475654",
      "name": "Get video generation status",
      "retryOnFail": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "ready",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "91402596-3978-4dfc-91b7-9ffe3521b862"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ready"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0c29765e-4213-434c-9bf3-c5e854dd6ee8",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "processing",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "processing"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4a6cfd86-e690-417e-aa6d-ae497e1177ae",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "not_found",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "failed"
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [2680, 2260],
      "id": "692f2aa2-2b74-450c-bfb2-90bc029dfde1",
      "name": "Video generation switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a7fdacca-749e-4f69-84fd-50075e0e3409",
              "name": "video_id",
              "value": "={{ $('Start generating captioned TTS video').item.json.file_id }}",
              "type": "string"
            },
            {
              "id": "6c99c267-5c41-4697-ba19-b51d9e8c9a4e",
              "name": "tts_id",
              "value": "={{ $('Global TTS audio id').item.json.tts_audio_id }}",
              "type": "string"
            },
            {
              "id": "21dd08a7-f785-4829-8609-a99950f21572",
              "name": "image_id",
              "value": "={{ $('Upload image to server').item.json.file_id }}",
              "type": "string"
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [2940, 2520],
      "id": "9b75719f-78d0-430c-b810-6851c31b7a4b",
      "name": "Setup media fields"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {

        }
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [100, 2860],
      "id": "da95bc0c-105d-49fc-89fb-4aa01126ef09",
      "name": "Combine loop items"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Configure me').item.json.tools_url }}/api/v1/media/video-tools/merge",
        "sendBody": true,
        "contentType": "form-urlencoded",
        "bodyParameters": {
          "parameters": [
            {
              "name": "video_ids",
              "value": "={{ $json.data.map(item =\u003E item.video_id).join(',') }}"
            },
            {
              "name": "background_music_id",
              "value": "={{ $('Background music results').item.json.background_music_id }}"
            },
            {
              "name": "background_music_volume",
              "value": "={{ $('Background music results').item.json.background_music_volume }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {

            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [300, 2860],
      "id": "4f4aaaa7-1781-42a9-ad57-30391902fb87",
      "name": "Start merging the videos"
    },
    {
      "parameters": {
        "url": "={{ $('Configure me').item.json.ai_agents_no_code_tools_url }}/api/v1/media/storage/{{ $('Start merging the videos').item.json.file_id }}/status",
        "options": {

        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [720, 2860],
      "id": "d7f73c5c-572b-497f-bab2-652d05050497",
      "name": "Get status of the video merge"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "ready",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "91402596-3978-4dfc-91b7-9ffe3521b862"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "ready"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0c29765e-4213-434c-9bf3-c5e854dd6ee8",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "processing",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "processing"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4a6cfd86-e690-417e-aa6d-ae497e1177ae",
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "not_found",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "failed"
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [900, 2860],
      "id": "7894cb19-3567-4e85-bad2-f59e1869291c",
      "name": "Video merge status switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "13b0dde8-b067-41d2-b7c2-fa5addf56a25",
              "name": "download_url",
              "value": "={{ $('Configure me').item.json.ai_agents_no_code_tools_url }}/api/v1/media/storage/{{ $('Start merging the videos').item.json.file_id }}",
              "type": "string"
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [1700, 2860],
      "id": "7a6c1407-743d-44ed-8580-612ecb52d77c",
      "name": "Setup final video download URL"
    },
    {
      "parameters": {
        "amount": 10
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [340, 2440],
      "id": "a397d74b-5998-4a5e-bb77-2011cfd93ef6",
      "name": "Wait for the error / rate limit to go away",
      "webhookId": "660ade8c-7fef-4067-893c-9e5c69690b2c"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [1060, 2460],
      "id": "caac686c-b48c-4fdf-bfe1-505b6bcdce26",
      "name": "Wait until the TTS gets generated",
      "webhookId": "15a948c1-85b4-4534-8d90-2ad7301f50fa"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Configure me').item.json.ai_agents_no_code_tools_url }}/api/v1/media/audio-tools/tts/chatterbox",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $('Loop Over Items').item.json.text }}"
            },
            {
              "name": "sample_audio_id",
              "value": "={{ $('Configure TTS').item.json.chatterbox_clone_voice_id ?? '' }}"
            },
            {
              "name": "exaggeration",
              "value": "={{ $('Configure TTS').item.json.chatterbox_exaggeration }}"
            },
            {
              "name": "cfg_weight",
              "value": "={{ $('Configure TTS').item.json.chatterbox_cfg_weight }}"
            },
            {
              "name": "temperature",
              "value": "={{ $('Configure TTS').item.json.chatterbox_temperature }}"
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [880, 2460],
      "id": "4e4e6095-b6f1-4901-a6cf-419725ed1eaf",
      "name": "Start generating TTS (chatterbox)"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [2300, 2260],
      "id": "8685eb7e-d51d-4306-978f-63434f530bac",
      "name": "Wait until the video gets generated",
      "webhookId": "7179f710-9124-4c8e-97b9-23dd726158ae"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [520, 2860],
      "id": "a882c2bd-b90e-4f48-8614-bd12e270cfab",
      "name": "Wait until the videos gets merged together",
      "webhookId": "bc245528-7953-478b-87fd-5e3e016239dd"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "12roXp7Ds8S0nA_Us2MjdKkAldJYUdTV80A7vcjwR6yI",
          "mode": "list",
          "cachedResultName": "reddit stories",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/12roXp7Ds8S0nA_Us2MjdKkAldJYUdTV80A7vcjwR6yI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/12roXp7Ds8S0nA_Us2MjdKkAldJYUdTV80A7vcjwR6yI/edit#gid=0"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "video_id"
            }
          ]
        },
        "options": {
          "returnFirstMatch": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [40, 1960],
      "id": "84639b94-0320-43aa-ba7b-918c75fc087d",
      "name": "Get story",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Configure TTS').item.json.tts_engine }}",
                    "rightValue": "kokoro",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "5ae108d7-13b2-41aa-ab18-45a80515ad51"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "kokoro"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a3dbceb9-96f7-4f78-b5e4-81bd6cb9a422",
                    "leftValue": "={{ $('Configure TTS').item.json.tts_engine }}",
                    "rightValue": "chatterbox",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "chatterbox"
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [660, 2280],
      "id": "180b7b1a-208e-40f2-9ab3-e33a6901b465",
      "name": "TTS switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d41f1ef6-7591-41b7-805d-94b58caba5c4",
              "name": "tts_audio_id",
              "value": "={{ $('Start generating TTS (chatterbox)').item.json.file_id }}",
              "type": "string"
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [1660, 2440],
      "id": "6b6d8b6e-dc26-4e5c-bc5c-3e742c66d703",
      "name": "Setup TTS file_id"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "87d65a77-d25e-42b2-86ac-7b1c4efb2990",
              "name": "text",
              "value": "={{ $json.text.includes(\"\u003Cthink\u003E\") ? $json.text.split(\"\u003C/think\u003E\")[1].trim() : $json.text.trim() }}",
              "type": "string"
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [960, 1960],
      "id": "c56c26b0-5fe0-46a6-9377-09f458f0f157",
      "name": "Cleanup text"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {

        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [1660, 1880],
      "id": "d2027c52-6248-4cd3-92b8-a279ba0e7b66",
      "name": "OpenAI Chat Model"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "68de9e0e-e234-4509-a57a-4c4c42590620",
              "name": "tts_audio_id",
              "value": "={{ $json.tts_audio_id }}",
              "type": "string"
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [1920, 2260],
      "id": "98632ad3-d165-4249-b87e-bdadf51a6b83",
      "name": "Global TTS audio id"
    },
    {
      "parameters": {
        "content": "# 4. Pick a story ⚠️\nmake sure to add the `video_id` filter with an empty value",
        "height": 400,
        "width": 600
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [0, 1740],
      "id": "592b1404-fedf-4a64-96f1-87175e892fa6",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "# 5. Create script from the story",
        "height": 400,
        "width": 880
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [640, 1740],
      "id": "7edcbfd0-ca6c-4ea8-86ca-26febaf01670",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "# 9. Merge the videos",
        "height": 360,
        "width": 1180
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [0, 2740],
      "id": "cddc2b0a-60f0-476e-9f6e-18f41d83de6a",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "12roXp7Ds8S0nA_Us2MjdKkAldJYUdTV80A7vcjwR6yI",
          "mode": "list",
          "cachedResultName": "reddit stories",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/12roXp7Ds8S0nA_Us2MjdKkAldJYUdTV80A7vcjwR6yI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/12roXp7Ds8S0nA_Us2MjdKkAldJYUdTV80A7vcjwR6yI/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Get story').item.json.id }}",
            "video_id": "={{ $('Start merging the videos').item.json.file_id }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "video_id",
              "displayName": "video_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [1340, 2860],
      "id": "d1c67b9a-da6b-4d86-b06e-a294fcad9b56",
      "name": "Save the video id",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "qnI1fPvhoqrSspvL",
          "name": "ssr sheets 2"
        }
      }
    },
    {
      "parameters": {
        "content": "# 6. Generate an image with Flux ⚠️",
        "height": 520,
        "width": 580
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [0, 2180],
      "id": "5cb1beac-ef92-4e9e-a6eb-5f287d8f6511",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "# 7. Create speech from text",
        "height": 520,
        "width": 1200
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [620, 2180],
      "id": "9a5502c8-5aa9-40cf-aac2-17ab97f008b2",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "content": "# 8. Generate captioned video",
        "height": 520,
        "width": 1240
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [1860, 2180],
      "id": "34e5a635-5ab7-407d-b4f2-4f6a4c067964",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "content": "# 10. Save to Sheets ⚠️",
        "height": 360,
        "width": 380
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [1220, 2740],
      "id": "f2318a05-2f05-48cf-9066-61374540ab54",
      "name": "Sticky Note11"
    },
    {
      "parameters": {
        "url": "={{ $('Setup final video download URL').item.json.download_url }}",
        "options": {

        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [2100, 2860],
      "id": "da4b7906-87bf-43ce-9411-7386012a4196",
      "name": "Download the video"
    },
    {
      "parameters": {
        "text": "=\u003CInstructions\u003E\nBreak up the text to multiple chunks that I can use for generating a youtube video, and for each chunk add an image generation prompt.\n\nAlso create a title and a description for the video.\n\nUse the following art style for the image prompts:\n\nArt style:\n{{ $('Configure me').item.json.art_style }}\n\n\u003C/Instructions\u003E\n\n\u003CText\u003E\n{{ $json.text }}\n\u003C/Text\u003E\n\n/nothink",
        "schemaType": "manual",
        "inputSchema": "{\n    \"type\": \"object\",\n    \"properties\": {\n        \"scenes\": {\n            \"type\": \"array\",\n            \"description\": \"user name\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"text\": {\n                        \"type\": \"string\",\n                        \"description\": \"the text of the scene, it will be used for TTS\"\n                    },\n                    \"image_prompt\": {\n                        \"type\": \"string\",\n                        \"description\": \"prompt for image generation\"\n                    }\n                },\n                \"required\": [\n                    \"text\",\n                    \"image_prompt\"\n                ]\n            }\n        },\n        \"title\": {\n            \"type\": \"string\",\n            \"description\": \"the title of the youtube video\"\n        },\n        \"description\": {\n            \"type\": \"string\",\n            \"description\": \"the description of the youtube video\"\n        }\n    },\n    \"required\": [\n        \"scenes\",\n        \"title\",\n        \"description\"\n    ]\n}",
        "options": {

        }
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.1,
      "position": [1080, 1960],
      "id": "166ce639-d848-4eed-874d-d967eb7fa14d",
      "name": "Create the script"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=\u003CInstructions\u003E\nUsing the below content, create 10s-60s long {{ $('Configure me').item.json.content_type }}.\nThe generated script will be used in a YouTube video.\nReturn clear text, no markdowns or any other styling is needed.\n\u003C/Instructions\u003E\n\n\u003CPost\u003E\n{{ $('Limit').item.json.title }}\n\n{{ $('Limit').item.json.content }}\n\u003C/Post\u003E\n\n/nothink",
        "batching": {

        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [680, 1960],
      "id": "48317ba3-0b24-4df4-aebf-21e041d55fbe",
      "name": "Create the motivational speech"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.scenes",
        "options": {

        }
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [1360, 1960],
      "id": "6a7b5e86-a620-4b2e-ae11-f06609f4c7fc",
      "name": "Split Out"
    },
    {
      "parameters": {
        "content": "# 11. Upload to YouTube ⚠️",
        "height": 360,
        "width": 900,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [1640, 2740],
      "id": "259edda5-3fe5-402e-9a45-04f7e7c726dd",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://www.googleapis.com/upload/youtube/v3/videos?part=snippet,status&uploadType=resumable",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "youTubeOAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "X-Upload-Content-Type",
              "value": "video/mp4"
            }
          ]
        },
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "RAW/JSON",
        "body": "={\n  \"snippet\": {\n    \"title\": \"{{ $('Create the script').item.json.output.title }}\",\n    \"description\": \"{{ $('Create the script').item.json.output.description }}\",\n    \"tags\": \"\",\n    \"categoryId\": \"24\",\n    \"defaultLanguage\": \"en\",\n    \"defaultAudioLanguage\": \"en\"\n  },\n  \"status\": {\n    \"privacyStatus\": \"public\",\n    \"license\": \"youtube\",\n    \"embeddable\": true,\n    \"publicStatsViewable\": true,\n    \"madeForKids\": false\n  }\n}\n",
        "options": {
          "response": {
            "response": {
              "fullResponse": true
            }
          }
        }
      },
      "id": "7a317624-3615-4b67-9341-e211e396bb8d",
      "name": "Start Youtube upload",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1900, 2860],
      "disabled": true
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "={{ $('Download the video').item.json.headers.location }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "youTubeOAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "video/mp4"
            }
          ]
        },
        "sendBody": true,
        "contentType": "binaryData",
        "inputDataFieldName": "data",
        "options": {

        }
      },
      "id": "b418dc58-2af7-41bf-b3de-6f1a5f6a2a84",
      "name": "Upload video to YouTube",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [2300, 2860],
      "disabled": true
    },
    {
      "parameters": {
        "url": "=https://www.reddit.com/r/{{ $('Configure me').item.json.subreddit }}/top.json?t=month&limit=100",
        "options": {

        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [460, 1360],
      "id": "ed844229-dd34-4727-bdf1-0d07b4bde38a",
      "name": "Get stories from reddit"
    },
    {
      "parameters": {
        "fieldToSplitOut": "data.children",
        "options": {

        }
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [620, 1360],
      "id": "ebad93ac-1dc7-4694-8da7-ec569f1bbf66",
      "name": "For Each story"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "12roXp7Ds8S0nA_Us2MjdKkAldJYUdTV80A7vcjwR6yI",
          "mode": "list",
          "cachedResultName": "reddit stories",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/12roXp7Ds8S0nA_Us2MjdKkAldJYUdTV80A7vcjwR6yI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/12roXp7Ds8S0nA_Us2MjdKkAldJYUdTV80A7vcjwR6yI/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "title": "={{ $json.data.title }}",
            "content": "={{ $json.data.selftext }}",
            "id": "={{ $json.data.id }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "content",
              "displayName": "content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "video_id",
              "displayName": "video_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [780, 1360],
      "id": "4c54b2a4-c8c6-4e49-a6d9-ee5591cae798",
      "name": "Save it to Google Sheets",
      "retryOnFail": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "qnI1fPvhoqrSspvL",
          "name": "ssr sheets 2"
        }
      }
    },
    {
      "parameters": {
        "content": "# 2. Update reddit stories ⚠️",
        "height": 460,
        "width": 1080
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [0, 1240],
      "id": "78554cfd-3a8e-437b-8e04-88b48eb135ed",
      "name": "Sticky Note17"
    },
    {
      "parameters": {
        "formTitle": "AI Agents A-Z Shorts Factory",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Would you like to update the sheet by downloading the stories from reddit?",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "no"
                  },
                  {
                    "option": "yes"
                  }
                ]
              },
              "requiredField": true
            },
            {
              "fieldLabel": "Would you like to use background music in the final video?",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "no"
                  },
                  {
                    "option": "yes"
                  }
                ]
              },
              "requiredField": true
            },
            {
              "fieldType": "html",
              "elementName": "warning",
              "html": "\u003Ch2\u003EMake sure the server has enough resources!\u003C/h1\u003E\n\u003Ch3\u003EMinimum 4vCPUs are recommended (more is better)\u003C/h3\u003E\n\u003Ch3\u003EChatterbox requires at least 8gb free ram\u003C/h2\u003E\n\u003Ch3\u003EKokoro requires at least 5gb free ram\u003C/h2\u003E"
            },
            {
              "fieldLabel": "Which TTS engine would you like to use?",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "kokoro"
                  },
                  {
                    "option": "chatterbox"
                  }
                ]
              },
              "requiredField": true
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [-980, 660],
      "id": "6a08e642-6a8a-498f-9190-edf7fd99f4be",
      "name": "On form submission1",
      "webhookId": "696fac84-849b-4fcf-a771-0174b5804577"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "673ecb92-5253-45ae-ab8b-17d673845442",
              "leftValue": "={{ $('On form submission1').item.json['Would you like to update the sheet by downloading the stories from reddit?'] }}",
              "rightValue": "yes",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "9a8bc757-1144-451d-b36a-18e74140a30e",
              "leftValue": "={{ !$('Aggregate').item.json.data?.[0] }}",
              "rightValue": 1,
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [320, 1500],
      "id": "43f51221-9100-4269-b82a-fce1e5d4328a",
      "name": "Update reddit stories?"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0cde6e03-a8da-4f1a-91c7-4adee90614c9",
              "leftValue": "={{ $('On form submission1').item.json['Would you like to use background music in the final video?'] }}",
              "rightValue": "yes",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [1220, 1520],
      "id": "49e12aa4-1904-4a55-811a-d1cd02bcbc1b",
      "name": "Background music?"
    },
    {
      "parameters": {
        "formFields": {
          "values": [
            {
              "fieldLabel": "Voice sample",
              "fieldType": "file",
              "multipleFiles": false,
              "acceptFileTypes": ".mp3, .wav",
              "requiredField": true
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.form",
      "typeVersion": 1,
      "position": [1240, 500],
      "id": "b9111c1e-b72a-4c25-8def-edd3e1560b66",
      "name": "Upload voice sample",
      "webhookId": "b558bcad-3378-4695-92a8-1f243c8e5292"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Configure me').item.json.no_code_tools_url }}/api/v1/media/storage",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "=Voice_sample"
            },
            {
              "name": "media_type",
              "value": "audio"
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1260, 720],
      "id": "732108f2-3ab7-4b5d-95ba-d1314c0b2941",
      "name": "Upload voice sample to the server"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Configure me').item.json.no_code_tools_url }}/api/v1/media/storage",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "=Background_music"
            },
            {
              "name": "media_type",
              "value": "audio"
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [1620, 1360],
      "id": "1e8abb9d-71cb-4309-8969-29a49ade95e3",
      "name": "Upload background music to the server"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7bbb518a-c4f1-49a5-9e72-3e9d939b131b",
              "name": "no_code_tools_url",
              "value": "http://192.168.68.60:8000",
              "type": "string"
            },
            {
              "id": "485a5788-cda6-4015-aa8d-d7b7ff012266",
              "name": "subreddit",
              "value": "selfimprovement",
              "type": "string"
            },
            {
              "id": "afa3df27-f529-452f-8976-63a0af466584",
              "name": "content_type",
              "value": "motivational speech",
              "type": "string"
            },
            {
              "id": "ddd725fb-b9f6-45d6-90df-88c50ba53a20",
              "name": "art_style",
              "value": "=Use the following prompt as a template for the image generation prompt, use the content to create a unique image for the scene.\n\nCreate a cinematic image in a dramatic, high-contrast photographic style, with a cool blue color grading. The subject is a figure [doing something, like walking under a waterfall, sitting under a tree, watching the sunset, whatever makes sense from the content's perspective], captured from a distance. The foreground should be softly blurred to focus attention on the landscape details. The mood should convey strength, wisdom, and a sense of calm determination. The overall visual should feel inspirational and dignified, resembling a powerful nature documentary scene.",
              "type": "string"
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [-640, 660],
      "id": "0ef18b0e-fd5b-4342-a316-8edc28c097b6",
      "name": "Configure me"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b538c801-3185-4763-b9d5-5a38088325fa",
                    "leftValue": "={{ $('On form submission1').item.json['Which TTS engine would you like to use?'] }}",
                    "rightValue": "chatterbox",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "chatterbox"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('On form submission1').item.json['Which TTS engine would you like to use?'] }}",
                    "rightValue": "kokoro",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "9643d386-ce0c-4543-99d6-2eaebe2f0c2e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "kokoro"
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [60, 740],
      "id": "d0885ac7-552e-4165-9518-4cb0e10edfc6",
      "name": "Switch"
    },
    {
      "parameters": {
        "url": "={{ $('Configure me').item.json._no_code_tools_url }}/api/v1/media/audio-tools/tts/kokoro/voices",
        "options": {

        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [280, 1020],
      "id": "f2e4a5d2-d4fb-46a5-a3a2-bb85ff16d9ba",
      "name": "Get supported kokoro voices"
    },
    {
      "parameters": {
        "defineForm": "json",
        "jsonOutput": "=[\n   {\n      \"fieldLabel\": \"Voice\",\n      \"requiredField\": true,\n      \"fieldType\": \"dropdown\",\n      \"fieldOptions\": {\n        \"values\": {{ $json.voices.map(item =\u003E { return {option: `${item}`} }) }}\n      }\n   },\n   {\n      \"fieldLabel\": \"Speed\",\n      \"fieldType\": \"number\",\n      \"placeholder\": \"The default is 1\",\n      \"requiredField\": true\n   }\n]",
        "options": {

        }
      },
      "type": "n8n-nodes-base.form",
      "typeVersion": 1,
      "position": [440, 1020],
      "id": "50e2885a-985b-43da-b2be-41ce4020438d",
      "name": "Setup kokoro",
      "webhookId": "c39345f2-1e0d-4ddf-8aa7-3640b6356e4f"
    },
    {
      "parameters": {
        "formFields": {
          "values": [
            {
              "fieldLabel": "Clone voice?",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "no"
                  },
                  {
                    "option": "yes"
                  }
                ]
              },
              "requiredField": true
            },
            {
              "fieldLabel": "Setup advanced options?",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "no"
                  },
                  {
                    "option": "yes"
                  }
                ]
              },
              "requiredField": true
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.form",
      "typeVersion": 1,
      "position": [280, 720],
      "id": "ac2aa8a7-9e50-4117-82d0-64dc9307a183",
      "name": "Setup chatterbox",
      "webhookId": "3fd9df20-b393-480d-a854-b823157a58a7"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7f58fc2c-48a2-4bed-b21a-84a080c84daf",
              "name": "tts_engine",
              "value": "={{ $('On form submission1').item.json['Which TTS engine would you like to use?'] }}",
              "type": "string"
            },
            {
              "id": "351324cf-a658-48f5-9150-0c8a9304fb41",
              "name": "kokoro_voice",
              "value": "={{ $json.Voice }}",
              "type": "string"
            },
            {
              "id": "f094be8b-c33a-44ba-8fc9-cb08d9cce918",
              "name": "kokoro_speed",
              "value": "={{ $json.Speed }}",
              "type": "number"
            },
            {
              "id": "4b98a5f0-83c9-46c9-b7dd-10a4e7633577",
              "name": "chatterbox_exaggeration",
              "value": "={{ $json.chatterbox_exaggeration }}",
              "type": "number"
            },
            {
              "id": "95751284-1328-4522-b4b2-cb00002db8e2",
              "name": "chatterbox_cfg_weight",
              "value": "={{ $json.chatterbox_cfg_weight }}",
              "type": "string"
            },
            {
              "id": "099815a4-0abb-4368-83ac-53f2213d88d5",
              "name": "chatterbox_temperature",
              "value": "={{ $json.chatterbox_temperature }}",
              "type": "string"
            },
            {
              "id": "637133d4-83eb-4535-b7c3-233009ab5208",
              "name": "chatterbox_clone_voice_id",
              "value": "={{ $json.chatterbox_voice_sample_id }}",
              "type": "string"
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [1480, 1020],
      "id": "0d2b1112-f6ad-4f01-8f7c-82c749ad033e",
      "name": "Configure TTS"
    },
    {
      "parameters": {
        "formFields": {
          "values": [
            {
              "fieldLabel": "Exaggeration",
              "fieldType": "number",
              "placeholder": "Default: 0.5",
              "requiredField": true
            },
            {
              "fieldLabel": "CFG Weight",
              "fieldType": "number",
              "placeholder": "Default: 0.5",
              "requiredField": true
            },
            {
              "fieldLabel": "Temperature",
              "fieldType": "number",
              "placeholder": "Default: 0.8",
              "requiredField": true
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.form",
      "typeVersion": 1,
      "position": [660, 620],
      "id": "cf08fc48-c09a-4174-aba9-bbfbcf69c9c6",
      "name": "Chatterbox advanced settings",
      "webhookId": "f1a5f072-29a1-4f53-8b4e-51786faf9117"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b0631c0c-3454-4d17-8216-6c917bb3537d",
              "name": "chatterbox_temperature",
              "value": 0.8,
              "type": "number"
            },
            {
              "id": "7a1f62fe-5cd1-4aae-b9d8-417b2e9c5c1f",
              "name": "chatterbox_cfg_weight",
              "value": 0.5,
              "type": "number"
            },
            {
              "id": "ac09bebe-57f4-457e-9a54-6eded76795b1",
              "name": "chatterbox_exaggeration",
              "value": 0.5,
              "type": "number"
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [660, 820],
      "id": "4398c086-62af-443e-8cdb-e6f0c7d92e90",
      "name": "Chatterbox advanced defaults"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f0d8d774-5a71-4f45-865c-38609d2f2ad4",
              "name": "chatterbox_exaggeration",
              "value": "={{ $json.Exaggeration || $json.chatterbox_exaggeration }}",
              "type": "number"
            },
            {
              "id": "33628ea7-6251-46db-96dc-2024f532ceff",
              "name": "chatterbox_cfg_weight",
              "value": "={{ $json['CFG Weight'] || $json.chatterbox_cfg_weight }}",
              "type": "number"
            },
            {
              "id": "3f65feeb-ffce-48a4-95a4-03b4eeef57e3",
              "name": "chatterbox_temperature",
              "value": "={{ $json.Temperature || $json.chatterbox_temperature }}",
              "type": "number"
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [840, 720],
      "id": "7e2f3c25-e16b-47e8-9457-47be7a8b215a",
      "name": "Setup advanced chatterbox values"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4ed7383d-4268-414a-97a9-04f2d77a7898",
              "leftValue": "={{ $json['Setup advanced options?'] }}",
              "rightValue": "yes",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [440, 720],
      "id": "6d239f0b-67b8-47cc-88d2-21c9970eb131",
      "name": "Advanced?"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7aec0c26-8c27-4aa6-bec7-1f65d9fe3aaf",
              "name": "chatterbox_voice_sample_id",
              "value": "={{ $json.file_id }}",
              "type": "string"
            },
            {
              "id": "b9d90334-4301-430f-a7a2-282d6efe9956",
              "name": "chatterbox_exaggeration",
              "value": "={{ $('Setup advanced chatterbox values').item.json.chatterbox_exaggeration }}",
              "type": "number"
            },
            {
              "id": "bef31658-4318-40e6-830e-69e9b72ad638",
              "name": "chatterbox_cfg_weight",
              "value": "={{ $('Setup advanced chatterbox values').item.json.chatterbox_cfg_weight }}",
              "type": "number"
            },
            {
              "id": "d9db3aea-3840-486a-ba0c-c40e05c49ae3",
              "name": "chatterbox_temperature",
              "value": "={{ $('Setup advanced chatterbox values').item.json.chatterbox_temperature }}",
              "type": "number"
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [1260, 940],
      "id": "9a7050f2-e1ca-48e6-9e4b-1bc566e47b1e",
      "name": "Setup chatterbox results"
    },
    {
      "parameters": {
        "content": "# 1. TTS configuration (form)",
        "height": 760,
        "width": 1640
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [0, 440],
      "id": "cbbe987b-6314-4e29-aa74-62d8c09f6505",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f5316cd3-b774-4688-808a-69385b647380",
              "name": "background_music_id",
              "value": "={{ $json.background_music_id }}",
              "type": "string"
            },
            {
              "id": "0dcb72fa-a800-498a-a89a-66cfbff62d9b",
              "name": "background_music_volume",
              "value": "={{ $json.background_music_volume }}",
              "type": "string"
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [2020, 1520],
      "id": "4c21d7eb-17ce-4a8f-ae7f-158e9e0787bf",
      "name": "Background music results"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "329c828e-bddf-45a1-b9dd-62e8d0080e0e",
              "name": "background_music_id",
              "value": "={{ $json.file_id }}",
              "type": "string"
            },
            {
              "id": "c3b266d6-5cca-479c-90b3-9c081473864f",
              "name": "background_music_volume",
              "value": "={{ $('Select background music').item.json.background_music_volume }}",
              "type": "number"
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [1820, 1360],
      "id": "4c844621-5991-45a7-9bb2-8bffabdd8f95",
      "name": "Set background music output"
    },
    {
      "parameters": {
        "content": "# 3. Upload background music",
        "height": 460,
        "width": 1260
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [1120, 1240],
      "id": "655ba404-1af5-49b3-8cac-8354d70ebce8",
      "name": "Sticky Note18"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c907e9e3-e9e4-4d6a-a8ae-503d3282fc2f",
              "leftValue": "={{ $('Setup chatterbox').item.json['Clone voice?'] }}",
              "rightValue": "yes",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [1000, 720],
      "id": "f4b9c836-2799-4519-90bb-409b893588c3",
      "name": "Clone voice?"
    },
    {
      "parameters": {
        "operation": "completion",
        "completionTitle": "The video is being generated",
        "completionMessage": "Depending on your computer, this could take a while",
        "options": {

        }
      },
      "type": "n8n-nodes-base.form",
      "typeVersion": 1,
      "position": [2220, 1520],
      "id": "cebc86f4-b6fd-4819-8121-df2b33b7a129",
      "name": "Close form",
      "webhookId": "911430e3-864e-430a-8839-541d18712a0a"
    },
    {
      "parameters": {
        "formFields": {
          "values": [
            {
              "fieldLabel": "Background music",
              "fieldType": "file",
              "multipleFiles": false,
              "acceptFileTypes": ".mp3",
              "requiredField": true
            },
            {
              "fieldLabel": "background_music_volume",
              "fieldType": "number",
              "placeholder": "number between 0.1 and 1 - I recommend 0.2",
              "requiredField": true
            }
          ]
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.form",
      "typeVersion": 1,
      "position": [1440, 1360],
      "id": "312e40e3-a7f5-40cd-ad1c-48c227aa717b",
      "name": "Select background music",
      "webhookId": "d094e96d-52a7-4743-8cb8-50d1469531d5"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "12roXp7Ds8S0nA_Us2MjdKkAldJYUdTV80A7vcjwR6yI",
          "mode": "list",
          "cachedResultName": "reddit stories",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/12roXp7Ds8S0nA_Us2MjdKkAldJYUdTV80A7vcjwR6yI/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/12roXp7Ds8S0nA_Us2MjdKkAldJYUdTV80A7vcjwR6yI/edit#gid=0"
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [40, 1500],
      "id": "e2ec0c36-0efb-432d-97d3-1720e2973dc2",
      "name": "Get one row from Sheets",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9aa0ae35-303b-40f5-8556-2af39e621abf",
              "leftValue": "={{ $('Get story').item.json.keys().length }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {

        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [280, 1960],
      "id": "85cc5f09-019b-462c-93d8-c22b8aca0cfc",
      "name": "If"
    },
    {
      "parameters": {
        "errorMessage": "No more stories! Please download more"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [460, 1800],
      "id": "ff313d79-1664-437c-8e15-76910c3726c1",
      "name": "No more stories"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {

        }
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [180, 1500],
      "id": "5aeec601-31d6-485a-b389-a3fb0a4e4687",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "url": "={{ $json._no_code_tools_url }}/health",
        "options": {

        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [-280, 660],
      "id": "4304325c-dfee-42eb-992f-ccdc5f5eb094",
      "name": "HTTP Request",
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "errorMessage": "The server is not running or isn't configured"
      },
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [-280, 820],
      "id": "b9e46db9-621d-4b44-8f4d-a1dd83712958",
      "name": "Server isn't ready"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {

        }
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [940, 1360],
      "id": "dad710ed-0872-4f3b-9982-f924f8f58f95",
      "name": "Combine"
    },
    {
      "parameters": {
        "content": "# How to set up this automation?\n\n## 1. Make a copy of the [Reddit Google Spreadsheet template](https://docs.google.com/spreadsheets/d/1W3BP1fxhmWqJGmhaYTflLnd7l0N1RaQUzXeI3Y5b7Fo/edit?usp=sharing) to your Google Drive\n## 2. Modify the Google Sheets nodes, select the one you just created\n## 3. Start the `AI Agents No-Code Tools` server\n## 4. Open the `Configure me` node, and setup the server url. You can also edit the subreddit, content type and art style if you want\n## 5. Create a free account on [Together AI](http://together.ai/), [create and API key](https://api.together.ai/settings/api-keys) and copy it\n## 6. Set up the `Generate AI Image` Node - create a new Bearer Auth credential and paste the API key from Together AI\n## 7. Set up the `Start YouTube upload` and `Upload video to YouTube` nodes - select/setup your YouTube credentials\n",
        "height": 400,
        "width": 1640,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [0, 0],
      "id": "6f0dbd7b-d2e8-47fc-8684-af8eb375b5e6",
      "name": "Sticky Note14"
    }
  ],
  "pinData": {

  },
  "connections": {
    "Limit": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Combine loop items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Generate AI image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate AI image": {
      "main": [
        [
          {
            "node": "Upload image to server",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait for the error / rate limit to go away",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload image to server": {
      "main": [
        [
          {
            "node": "TTS switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get status of TTS generation": {
      "main": [
        [
          {
            "node": "TTS status switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TTS status switch": {
      "main": [
        [
          {
            "node": "Setup TTS file_id",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait until the TTS gets generated",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Start generating TTS (chatterbox)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start generating captioned TTS video": {
      "main": [
        [
          {
            "node": "Wait until the video gets generated",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get video generation status": {
      "main": [
        [
          {
            "node": "Video generation switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Video generation switch": {
      "main": [
        [
          {
            "node": "Setup media fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait until the video gets generated",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Setup media fields": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine loop items": {
      "main": [
        [
          {
            "node": "Start merging the videos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start merging the videos": {
      "main": [
        [
          {
            "node": "Wait until the videos gets merged together",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get status of the video merge": {
      "main": [
        [
          {
            "node": "Video merge status switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Video merge status switch": {
      "main": [
        [
          {
            "node": "Save the video id",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait until the videos gets merged together",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for the error / rate limit to go away": {
      "main": [
        [
          {
            "node": "Generate AI image",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait until the TTS gets generated": {
      "main": [
        [
          {
            "node": "Get status of TTS generation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start generating TTS (chatterbox)": {
      "main": [
        [
          {
            "node": "Wait until the TTS gets generated",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait until the video gets generated": {
      "main": [
        [
          {
            "node": "Get video generation status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait until the videos gets merged together": {
      "main": [
        [
          {
            "node": "Get status of the video merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get story": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Setup final video download URL": {
      "main": [
        [
          {
            "node": "Start Youtube upload",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TTS switch": {
      "main": [
        [
          {
            "node": "Global TTS audio id",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Start generating TTS (chatterbox)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Setup TTS file_id": {
      "main": [
        [
          {
            "node": "Global TTS audio id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cleanup text": {
      "main": [
        [
          {
            "node": "Create the script",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Create the motivational speech",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Create the script",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Global TTS audio id": {
      "main": [
        [
          {
            "node": "Start generating captioned TTS video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save the video id": {
      "main": [
        [
          {
            "node": "Setup final video download URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download the video": {
      "main": [
        [
          {
            "node": "Upload video to YouTube",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create the script": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create the motivational speech": {
      "main": [
        [
          {
            "node": "Cleanup text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start Youtube upload": {
      "main": [
        [
          {
            "node": "Download the video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload video to YouTube": {
      "main": [
        []
      ]
    },
    "Get stories from reddit": {
      "main": [
        [
          {
            "node": "For Each story",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "For Each story": {
      "main": [
        [
          {
            "node": "Save it to Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On form submission1": {
      "main": [
        [
          {
            "node": "Configure me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update reddit stories?": {
      "main": [
        [
          {
            "node": "Get stories from reddit",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Background music?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save it to Google Sheets": {
      "main": [
        [
          {
            "node": "Combine",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Background music?": {
      "main": [
        [
          {
            "node": "Select background music",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Background music results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload voice sample": {
      "main": [
        [
          {
            "node": "Upload voice sample to the server",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload voice sample to the server": {
      "main": [
        [
          {
            "node": "Setup chatterbox results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload background music to the server": {
      "main": [
        [
          {
            "node": "Set background music output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Configure me": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Setup chatterbox",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get supported kokoro voices",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get supported kokoro voices": {
      "main": [
        [
          {
            "node": "Setup kokoro",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Setup kokoro": {
      "main": [
        [
          {
            "node": "Configure TTS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Setup chatterbox": {
      "main": [
        [
          {
            "node": "Advanced?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Configure TTS": {
      "main": [
        [
          {
            "node": "Get one row from Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chatterbox advanced settings": {
      "main": [
        [
          {
            "node": "Setup advanced chatterbox values",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chatterbox advanced defaults": {
      "main": [
        [
          {
            "node": "Setup advanced chatterbox values",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Setup advanced chatterbox values": {
      "main": [
        [
          {
            "node": "Clone voice?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Advanced?": {
      "main": [
        [
          {
            "node": "Chatterbox advanced settings",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chatterbox advanced defaults",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Setup chatterbox results": {
      "main": [
        [
          {
            "node": "Configure TTS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Background music results": {
      "main": [
        [
          {
            "node": "Close form",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set background music output": {
      "main": [
        [
          {
            "node": "Background music results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clone voice?": {
      "main": [
        [
          {
            "node": "Upload voice sample",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Setup chatterbox results",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Close form": {
      "main": [
        [
          {
            "node": "Get story",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Select background music": {
      "main": [
        [
          {
            "node": "Upload background music to the server",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get one row from Sheets": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "No more stories",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create the motivational speech",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Update reddit stories?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Server isn't ready",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combine": {
      "main": [
        [
          {
            "node": "Background music?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "c5fad018-f99d-42b8-a306-411dd1ce3bae",
  "meta": {
    "instanceId": "4507f5d609a174f0ce821547c3dd807026c25fcd09f82aad212a3cfd199f8dbc"
  },
  "id": "hhKZ5lH5f2JenkBE",
  "tags": []
}
